<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_player_stand</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0.25</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.arma</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inicializar vaiables

grav = 1; // Gravedad
spd = 6;  // Velocidad
jspd = 20;// Velocidad de salto
hspd = 0; // Velocidad horizontal
vspd = 0; // Velocidad vertical
fric = 1; // Friccion
dash = false; // SI se usa dash o nd
dash_cd = false; // Cooldown del dash

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dash_cd = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Devolver velocidad

hspd = 0;
dash = false;

alarm[1] = room_speed/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimiento del jugador y sprites

//----------------------------------------------------------
// =====================  MOVIMIENTO  =====================
//----------------------------------------------------------
 
var rkey = keyboard_check(ord('D')); // Derecha
var lkey = keyboard_check(ord('A')); // Izquierda
var jkey = keyboard_check_pressed(vk_space); // Saltar

//Comprobar si hay suelo
if(place_meeting(x, y+1, obj_solid) &amp;&amp; dash==false) {
    vspd = 0;
    
    //Salto
    if(jkey == true){
        vspd = -jspd;
    }
}
// Si no hay suelo...
else{
    //Gravedad
    if(vspd &gt; 0&amp;&amp; dash==false){
        vspd += 1.25*grav;
    }    
    if(vspd &lt;= 0&amp;&amp; dash==false){
        vspd += grav;
    }
    
    
    if(keyboard_check_released(vk_space) &amp;&amp; vspd &lt; -4 &amp;&amp; dash==false){
        vspd = -4;
    }
    
    
}

// Movimiento Derecha
if(rkey &amp;&amp; dash==false){
    if(hspd &lt; spd){
        hspd += fric;
    }else{
        hspd = spd;
    }
}

// Movimiento Izquierda
if(lkey &amp;&amp; dash==false){
    if(hspd &gt; -spd){
        hspd -= fric;
    }else{
        hspd = -spd;
    }
}

// Comprobar movimiento nulo
if((!rkey &amp;&amp; !lkey) || (rkey &amp;&amp; lkey)){
    if(hspd != 0){
        if(hspd &lt; 0){
            hspd += fric;
        }else{
            hspd -= fric;
        }
    }
}

// Colisiones horizontales
if(place_meeting(x+hspd, y, obj_solid)){
    while(!place_meeting(x+sign(hspd), y, obj_solid)){
        x += sign(hspd);
    }
    hspd = 0;
}

// Intento de DASH 01
if(mouse_check_button_pressed(mb_right) &amp;&amp; dash_cd == false){
    dash = true;
    dash_cd = true;
    hspd = 0;
    x += 0;
    y += 0;
    
    
    
    
    if(rkey == true){
        if(place_meeting(x+20.1, y, obj_solid)){
         
         
             hspd = 0;} else{ 
             haspd = 0;
             hspd = 20;}
    }else if(lkey == true){
        if(place_meeting(x-20.1, y, obj_solid)){
         
             hspd = 0;} else{ 
             hspd = 0;
             hspd = -20;}
    }else {
        if(x&gt;mouse_x){
            if(place_meeting(x-20.1, y, obj_solid)){
         
             hspd = 0;} else{ 
             hspd = 0;
             hspd = -20; }
        }if(x&lt;mouse_x){
            if(place_meeting(x+20.1, y, obj_solid)){
         
             hspd = 0;} else{ 
             hspd = 0;
             hspd = 20;} 
         }  
        
    }
    vspd = 0;
    
    
    alarm[0] = room_speed/5.55555555555555555555555555555555555555555555555555555555555;
}





// Moverse horizontalmente
x += hspd;

// Colisiones verticales
if(place_meeting(x, y+vspd, obj_solid)){
    while(!place_meeting(x, y+sign(vspd), obj_solid)){
        y += sign(vspd);
    }
    vspd = 0;
}

// Moverse verticalmente
y += vspd;



//-------------------------------------------------------
// =====================  SPRITES  =====================
//-------------------------------------------------------

// Control del sprite
if(yprevious != y){
    sprite_index = spr_player_jump;
    image_speed = 0;
}else{
    if(xprevious != x){
        sprite_index = spr_player_moove;
        image_speed = 0.3;
    }else{
        sprite_index = spr_player_stand;
    }
}

// Control de la direccion a la que mira el jugador
if(x &gt; mouse_x){
    image_xscale = -1;
}else if(x &lt; mouse_x){
    image_xscale = 1;
}
 
fotograma = sprite_index;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bananastola_recogible">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_PrevRoom">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>rm_tuto_01</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_NextRoom">
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
